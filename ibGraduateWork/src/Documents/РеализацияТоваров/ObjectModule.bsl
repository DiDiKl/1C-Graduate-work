
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ДокументЗакупкиПродажиСервер.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	МетодУчета = РегистрыСведений.УчетнаяПолитика.ПолучитьПоследнее(МоментВремени()).Метод;
	Если Не ЗначениеЗаполнено(МетодУчета) Тогда
		СервисКлиентСервер.СообщитьПользователю("Не установлена учетная политика. См. регистр ""Учетна политика"".", "Дата");
		Отказ = Истина;
	КонецЕсли;
	КоэффПеревода = СервисВызовСервера.ПолучитьКоэффициентПереводаВалютыВУчетнуюВалюту(Валюта, Дата, Истина, Отказ);	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	#Область ОперативныйУчет
	Движения.ОстаткиТоваров.Записывать = Истина;
	Движения.ОстаткиТоваров.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РеализацияТоваровТовары.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
		|ГДЕ
		|	РеализацияТоваровТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровТовары.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Товары.Номенклатура КАК Номенклатура,
		|	ВТ_Товары.Номенклатура.Представление КАК Наименование,
		|	ВТ_Товары.Номенклатура.ВидНоменклатуры.Товар КАК ВидНоменклатурыТовар,
		|	ВТ_Товары.Количество КАК Количество,
		|	ОстаткиТоваровОстатки.Партия КАК Партия,
		|	ЕСТЬNULL(ОстаткиТоваровОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ОстаткиТоваровОстатки.СтоимостьОстаток, 0) КАК СтоимостьОстаток
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиТоваров.Остатки(&МоментВремени, Склад = &Склад) КАК ОстаткиТоваровОстатки
		|		ПО ВТ_Товары.Номенклатура = ОстаткиТоваровОстатки.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОстаткиТоваровОстатки.Партия.МоментВремени УБЫВ
		|ИТОГИ
		|	МАКСИМУМ(Количество),
		|	СУММА(КоличествоОстаток),
		|	СУММА(СтоимостьОстаток)
		|ПО
		|	Номенклатура";
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Если МетодУчета = Перечисления.МетодыУчетнойПалитики.ФИФО Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "УБЫВ", "ВОЗР");	
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Если ВыборкаНоменклатура.ВидНоменклатурыТовар Тогда
			Если ВыборкаНоменклатура.Количество > ВыборкаНоменклатура.КоличествоОстаток Тогда
				СервисКлиентСервер.СообщитьПользователю(   
					?(ВыборкаНоменклатура.КоличествоОстаток = 0,
						//1
						"Ошибка ОУ: Товара """+ВыборкаНоменклатура.Наименование+""" нет в наличии на складе """+Склад.Наименование+""".",
						//2
						СтрШаблон("Ошибка ОУ: Товара ""%1"" недостаточно на складе ""%2"" в количестве: %3 шт.", 
							ВыборкаНоменклатура.Наименование, Склад.Наименование, ВыборкаНоменклатура.Количество-ВыборкаНоменклатура.КоличествоОстаток 
						)
					)//?
				);
				Отказ = Истина;
			КонецЕсли;
			Если Отказ Тогда
				Продолжить;
			КонецЕсли;
			
			КоличествоТовара = ВыборкаНоменклатура.Количество;
			Выборка = ВыборкаНоменклатура.Выбрать();
			Пока КоличествоТовара > 0 И Выборка.Следующий() Цикл
				Движение = Движения.ОстаткиТоваров.ДобавитьРасход();
				Движение.Период = Дата;
				Движение.Склад = Склад;
				Движение.Партия = Выборка.Партия;
				Движение.Номенклатура = Выборка.Номенклатура;
				
				Если КоличествоТовара >= Выборка.КоличествоОстаток Тогда
					Движение.Количество = Выборка.КоличествоОстаток;
					Движение.Стоимость = Выборка.СтоимостьОстаток;	
				Иначе 	
				    Движение.Количество = КоличествоТовара;
					Движение.Стоимость = Выборка.СтоимостьОстаток / Выборка.КоличествоОстаток * КоличествоТовара;
				КонецЕсли;
				КоличествоТовара = КоличествоТовара - Движение.Количество;	
			КонецЦикла;
			
		КонецЕсли;//Если ВыборкаНоменклатура.ВидНоменклатурыТовар 
		
	КонецЦикла;//Пока ВыборкаНоменклатура.Следующий()
	
    #КонецОбласти
	
	#Область БухгалтерскийУчет_СписаниеСебестоимости
	Движения.Хозрасчетный.Записывать = Истина;
	Движения.Хозрасчетный.Записать();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РеализацияТоваровТовары.Количество) КАК Количество
		|ПОМЕСТИТЬ ВТ_Товары
		|ИЗ
		|	Документ.РеализацияТоваров.Товары КАК РеализацияТоваровТовары
		|ГДЕ
		|	РеализацияТоваровТовары.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РеализацияТоваровТовары.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Товары.Номенклатура КАК Номенклатура,
		|	ВТ_Товары.Номенклатура.Представление КАК Наименование,
		|	ВТ_Товары.Номенклатура.ВидНоменклатуры.Товар КАК ВидТовар,
		|	ВТ_Товары.Количество КАК Количество,
		|	ЕСТЬNULL(ХозрасчОстВсе.КоличествоОстатокДт, 0) КАК КолвоОстВсе,
		|	ЕСТЬNULL(ХозрасчОстВсе.СуммаОстатокДт, 0) КАК СуммаОстВсе,
		|	ХозрасчОстПоСклад.Субконто3 КАК Партия,
		|	ЕСТЬNULL(ХозрасчОстПоСклад.КоличествоОстатокДт, 0) КАК КолвоОстПартия
		|ИЗ
		|	ВТ_Товары КАК ВТ_Товары
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&МоментВремени, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладах), &СписокСубконто, ) КАК ХозрасчОстВсе
		|		ПО ВТ_Товары.Номенклатура = ХозрасчОстВсе.Субконто1
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(&МоментВремени, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладах), &СписокСубконто, Субконто2 = &Склад) КАК ХозрасчОстПоСклад
		|		ПО ВТ_Товары.Номенклатура = ХозрасчОстПоСклад.Субконто1
		|ИТОГИ
		|	МАКСИМУМ(Количество),
		|	МАКСИМУМ(КолвоОстВсе),
		|	МАКСИМУМ(СуммаОстВсе),
		|	СУММА(КолвоОстПартия)
		|ПО
		|	Номенклатура";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Склад", Склад);
	СписокСубконто = Новый Массив;
	СписокСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Номенклатура);
	СписокСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Склад);
	СписокСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконто.Партия);
	Запрос.УстановитьПараметр("СписокСубконто", СписокСубконто);
	
	РезультатЗапроса = Запрос.Выполнить();
	//РезультатЗапроса.Выгрузить()
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Если ВыборкаНоменклатура.ВидТовар Тогда
		    Если ВыборкаНоменклатура.Количество > ВыборкаНоменклатура.КолвоОстПартия Тогда
				СервисКлиентСервер.СообщитьПользователю(   
					?(ВыборкаНоменклатура.КолвоОстПартия = 0,
						//1
						"Ошибка БУ: Товара """+ВыборкаНоменклатура.Наименование+""" нет в наличии на складе """+Склад.Наименование+""".",
						//2
						СтрШаблон("Ошибка БУ: Товара ""%1"" недостаточно на складе ""%2"" в количестве: %3 шт.", 
							ВыборкаНоменклатура.Наименование, Склад.Наименование, ВыборкаНоменклатура.Количество-ВыборкаНоменклатура.КолвоОстПартия 
						)
					)//?
				);
				Отказ = Истина;
			КонецЕсли;
			Если Отказ Тогда
				Продолжить;
			КонецЕсли;
			
			КолвоТовара = ВыборкаНоменклатура.Количество;
			КолвоТовараОстаток = ВыборкаНоменклатура.КолвоОстВсе;
			СтоимостьТовараОстаток = ВыборкаНоменклатура.СуммаОстВсе;
			СтоимостьТовараСредняя = СтоимостьТовараОстаток / КолвоТовараОстаток;
			Выборка = ВыборкаНоменклатура.Выбрать();
			Пока КолвоТовара > 0 И Выборка.Следующий() Цикл 
				
				Движение = Движения.Хозрасчетный.Добавить();
				Движение.СчетДт = ПланыСчетов.Хозрасчетный.СебестоимостьПродаж;
				Движение.СчетКт = ПланыСчетов.Хозрасчетный.ТоварыНаСкладах;
				Движение.Период = Дата;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Номенклатура] = Выборка.Номенклатура;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Склад] = Склад;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Партия] = Выборка.Партия;
				
				Движение.КоличествоКт = мин(КолвоТовара, Выборка.КолвоОстПартия);
				Если Движение.КоличествоКт = КолвоТовараОстаток Тогда
					Движение.Сумма = СтоимостьТовараОстаток;	
				Иначе	
				    Движение.Сумма = Движение.КоличествоКт * СтоимостьТовараСредняя;
					КолвоТовараОстаток = КолвоТовараОстаток - Движение.КоличествоКт;
					СтоимостьТовараОстаток = СтоимостьТовараОстаток - Движение.Сумма;
				КонецЕсли;
				КолвоТовара = КолвоТовара - Движение.КоличествоКт;
				
			КонецЦикла;	
		
		КонецЕсли;// Если ВыборкаНоменклатура.ВидТовар
	КонецЦикла;// Пока ВыборкаНоменклатура.Следующий()
	#КонецОбласти
	 
	Движение = Движения.Хозрасчетный.Добавить();
	Движение.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
	Движение.СчетКт = ПланыСчетов.Хозрасчетный.Выручка;
	Движение.Период = Дата;
	Движение.Сумма = ИтоговаяСумма * КоэффПеревода;
	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Контрагент] = Контрагент;
	Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконто.Договор] = Договор;
	Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконто.Контрагент] = Контрагент;

    //{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры
