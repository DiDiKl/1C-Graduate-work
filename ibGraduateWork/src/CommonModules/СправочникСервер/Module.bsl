// Проверяет существует ли элемент в справочнике со значением реквизита переданного объекта-элемента. 
// Выполняется если объект-элемент новый или значение проверяемого реквизита было изменено.
// Параметры:
//  ИмяСправочника - Строка - Имя справочника заданное в конфигурации.
//  Объект - ДанныеФормыСтруктура - Основной реквизит формы справочника.
//  ИмяРеквизита - Строка - Проверяемый реквизит.
//  ПоВладельцу - Булево - Владелец по которому будет выполнен поиск.
//  СообщитьЕслиНет - Булево - Указывает о необходимости вывести сообщение если значение неуникально.
// Возвращаемое значение:
//   Булево   - Истина если уникально, иначе Ложь.
Функция ПроверитьУникальностьЗначенияРеквизита(ИмяСправочника, Объект, ИмяРеквизита, ПоВладельцу=Ложь, СообщитьЕслиНет=Истина) Экспорт
	Возврат ПроверитьУникальность(ИмяСправочника, Объект, ИмяРеквизита, ПоВладельцу, СообщитьЕслиНет);
КонецФункции

// Проверяет существует ли элемент с наименованием переданного объекта-элемента в справочнике. 
// Выполняется если объект-элемент новый или Наименование было изменено.
// Параметры:
//  ИмяСправочника - Строка - Имя справочника заданное в конфигурации.
//  Объект - ДанныеФормыСтруктура - Основной реквизит формы справочника.
//  ВТочности - Булево - Поиск полного совпадения наименования.
//  ПоВладельцу - Булево - Владелец по которому будет выполнен поиск.
//  СообщитьЕслиНет - Булево - Указывает о необходимости вывести сообщение если наименование неуникально.
// Возвращаемое значение:
//   Булево   - Истина если уникально, иначе Ложь.
Функция ПроверитьУникальностьНаименования(ИмяСправочника, Объект, ПоВладельцу=Ложь, СообщитьЕслиНет=Истина) Экспорт
	Возврат ПроверитьУникальность(ИмяСправочника, Объект, "Наименование", ПоВладельцу, СообщитьЕслиНет);
КонецФункции 


#Область НеЭкспорт

Функция ПроверитьУникальность(ИмяСправочника, Объект, ИмяРеквизита, ПоВладельцу, СообщитьЕслиНет)
	Если Объект.Ссылка.Пустая() Или //  Новый элемент
		Объект[ИмяРеквизита] <> Объект.Ссылка[ИмяРеквизита] Тогда 
		Владелец = Неопределено;
		Если ПоВладельцу Тогда
			Объект.Свойство("Владелец", Владелец);
		КонецЕсли;
	    Содержит = ?(ИмяРеквизита = "Наименование",
			СправочникВызовСервера.СодержитЭлементСТакимНаименованием(ИмяСправочника, Объект.Наименование, Владелец),
			СправочникВызовСервера.СодержитЭлементСЗначениемРеквизита(ИмяСправочника, ИмяРеквизита, Объект[ИмяРеквизита], Владелец)
		);
		Если Содержит И СообщитьЕслиНет Тогда
			СообщитьЗначениеНеуникально(ИмяСправочника, ИмяРеквизита, Объект[ИмяРеквизита]);
		КонецЕсли;
		Возврат Не Содержит;	
	КонецЕсли;                                                            
    Возврат Истина;
КонецФункции

//
Функция СообщитьЗначениеНеуникально(ИмяСправочника, ИмяРеквизита, ЗначениеРеквизита)
	ТекстСбщ = Неопределено;
	Если ИмяРеквизита = "Наименование" Тогда					
		ТекстСбщ = "Элемент с наименованием """+ЗначениеРеквизита+""" уже существует.";
	Иначе 
		Если ИмяСправочника = "Договоры" Тогда
			Если ИмяРеквизита = "НомерДоговора" Тогда					
				ТекстСбщ = "Уже существует договор с номером: "+ЗначениеРеквизита+".";	
			КонецЕсли;
		ИначеЕсли ИмяСправочника = "СчетаОрганизации" Тогда			
		    Если ИмяРеквизита = "НомерСчета" Тогда					
				ТекстСбщ = "Уже существует счет с номером: "+Строка(ЗначениеРеквизита)+".";	
			КонецЕсли;
		Иначе   
			Рек = Метаданные.Справочники[ИмяСправочника].Реквизиты.Найти(ИмяРеквизита);
			ПредставлениеРек = ?(Рек <> Неопределено, Рек.Представление(), ИмяРеквизита);
			ТекстСбщ = СтрШаблон("Справочник содержит элемент со значением ""%1"" поля ""%2"".", Строка(ЗначениеРеквизита), ПредставлениеРек);
		КонецЕсли;	
	КонецЕсли;
	СервисКлиентСервер.СообщитьПользователю(ТекстСбщ, "Объект."+ИмяРеквизита);
КонецФункции // ПолучитьТекстСообщенияЭлементСуществует()

#КонецОбласти