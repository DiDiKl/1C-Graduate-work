
#Область ВспомогательныеФункции

Функция СодержитЭлемент(ИмяСправочника, Объект, ИмяРеквизита, ПоВладельцу)
	Если Объект.Ссылка.Пустая() Или //  Новый элемент
		Объект[ИмяРеквизита] <> Объект.Ссылка[ИмяРеквизита] Тогда 
		Владелец = Неопределено;
		Если ПоВладельцу Тогда
			Объект.Свойство("Владелец", Владелец);
		КонецЕсли;
	    Возврат ?(ИмяРеквизита = "Наименование",
			СправочникВызовСервера.СодержитЭлементСТакимНаименованием(ИмяСправочника, Объект.Наименование, Владелец),
			СправочникВызовСервера.СодержитЭлементСЗначениемРеквизита(ИмяСправочника, ИмяРеквизита, Объект[ИмяРеквизита], Владелец)
			);
	КонецЕсли;                                                            
    Возврат Ложь;
КонецФункции

//
Функция СообщитьЭлементСуществует(ИмяСправочника, ИмяРеквизита, ЗначениеРеквизита)
	ТекстСбщ = Неопределено;
	Если ИмяРеквизита = "Наименование" Тогда					
		ТекстСбщ = "Элемент с наименованием """+ЗначениеРеквизита+""" уже существует.";
	Иначе 
		Если ИмяСправочника = "Договоры" Тогда
			Если ИмяРеквизита = "НомерДоговора" Тогда					
				ТекстСбщ = "Уже существует договор с номером: "+ЗначениеРеквизита+".";	
			КонецЕсли;
		ИначеЕсли ИмяСправочника = "СчетаОрганизации" Тогда			
		    Если ИмяРеквизита = "НомерСчета" Тогда					
				ТекстСбщ = "Уже существует счет с номером: "+Строка(ЗначениеРеквизита)+".";	
			КонецЕсли;
		Иначе 
			ТекстСбщ = СтрШаблон("Справочник содержит элемент со значением ""%1"" поля ""%2"".", Строка(ЗначениеРеквизита), ИмяРеквизита);
		КонецЕсли;	
	КонецЕсли;
	СервисКлиентСервер.СообщитьПользователю(ТекстСбщ, "Объект."+ИмяРеквизита);
КонецФункции // ПолучитьТекстСообщенияЭлементСуществует()

#КонецОбласти

// Проверяет существует ли элемент в справочнике со значением реквизита переданного объекта-элемента. 
// Выполняется если объект-элемент новый или значение проверяемого реквизита было изменено.
// Параметры:
//  ИмяСправочника - Строка - Имя справочника заданное в конфигурации.
//  Объект - ДанныеФормыСтруктура - Основной реквизит формы справочника.
//  ИмяРеквизита - Строка - Проверяемый реквизит.
//  ПоВладельцу - Булево - Владелец по которому будет выполнен посик.
//  СообщитьЕслиДа - Булево - Указывает о необходимости вывести сообщение если элемент содержится.
// Возвращаемое значение:
//   Булево   - Истина если элемент существует, иначе Ложь.
Функция СодержитЭлементСЗначениемРеквизита(ИмяСправочника, Объект, ИмяРеквизита, ПоВладельцу=Ложь, СообщитьЕслиДа=Истина) Экспорт
	Содержит = СодержитЭлемент(ИмяСправочника, Объект, ИмяРеквизита, ПоВладельцу);
	Если Содержит И СообщитьЕслиДа Тогда
		СообщитьЭлементСуществует(ИмяСправочника, ИмяРеквизита, Объект[ИмяРеквизита]);
	КонецЕсли;
	Возврат Содержит;
КонецФункции

// Проверяет существует ли элемент с наименованием переданного объекта-элемента в справочнике. 
// Выполняется если объект-элемент новый или Наименование было изменено.
// Параметры:
//  ИмяСправочника - Строка - Имя справочника заданное в конфигурации.
//  Объект - ДанныеФормыСтруктура - Основной реквизит формы справочника.
//  ВТочности - Булево - Поиск полного совпадения наименования.
//  ПоВладельцу - Булево - Владелец по которому будет выполнен посик.
//  СообщитьЕслиДа - Булево - Указывает о необходимости вывести сообщение если элемент содержится.
// Возвращаемое значение:
//   Булево   - Истина если элемент существует, иначе Ложь.
Функция СодержитЭлементСТакимНаименованием(ИмяСправочника, Объект, ПоВладельцу=Ложь, СообщитьЕслиДа=Истина) Экспорт
	Содержит = СодержитЭлемент(ИмяСправочника, Объект, "Наименование", ПоВладельцу);
	Если Содержит И СообщитьЕслиДа Тогда
		СообщитьЭлементСуществует(ИмяСправочника, "Наименование", Объект.Наименование);
	КонецЕсли;
	Возврат Содержит;
КонецФункции 

